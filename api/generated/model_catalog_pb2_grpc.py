# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from api.generated import model_catalog_pb2 as model__catalog__pb2


class ModelCatalogStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SignIn = channel.unary_unary(
                '/model_catalog.ModelCatalog/SignIn',
                request_serializer=model__catalog__pb2.SignInRequest.SerializeToString,
                response_deserializer=model__catalog__pb2.SignInResponse.FromString,
                )
        self.SignUp = channel.unary_unary(
                '/model_catalog.ModelCatalog/SignUp',
                request_serializer=model__catalog__pb2.SignUpRequest.SerializeToString,
                response_deserializer=model__catalog__pb2.SignUpResponse.FromString,
                )
        self.CreateFolder = channel.unary_unary(
                '/model_catalog.ModelCatalog/CreateFolder',
                request_serializer=model__catalog__pb2.CreateFolderRequest.SerializeToString,
                response_deserializer=model__catalog__pb2.CreateFolderResponse.FromString,
                )
        self.CreateModel = channel.unary_unary(
                '/model_catalog.ModelCatalog/CreateModel',
                request_serializer=model__catalog__pb2.CreateModelRequest.SerializeToString,
                response_deserializer=model__catalog__pb2.CreateModelResponse.FromString,
                )
        self.ListModels = channel.unary_unary(
                '/model_catalog.ModelCatalog/ListModels',
                request_serializer=model__catalog__pb2.ListModelsRequest.SerializeToString,
                response_deserializer=model__catalog__pb2.ListModelsResponse.FromString,
                )
        self.UploadFile = channel.stream_unary(
                '/model_catalog.ModelCatalog/UploadFile',
                request_serializer=model__catalog__pb2.UploadFileRequest.SerializeToString,
                response_deserializer=model__catalog__pb2.UploadFileResponse.FromString,
                )
        self.SetModelVersion = channel.unary_unary(
                '/model_catalog.ModelCatalog/SetModelVersion',
                request_serializer=model__catalog__pb2.SetModelVersionRequest.SerializeToString,
                response_deserializer=model__catalog__pb2.SetModelVersionResponse.FromString,
                )
        self.DownloadVersion = channel.unary_stream(
                '/model_catalog.ModelCatalog/DownloadVersion',
                request_serializer=model__catalog__pb2.DownloadVersionRequest.SerializeToString,
                response_deserializer=model__catalog__pb2.DownloadVersionResponse.FromString,
                )
        self.GrantAccess = channel.unary_unary(
                '/model_catalog.ModelCatalog/GrantAccess',
                request_serializer=model__catalog__pb2.GrantAccessRequest.SerializeToString,
                response_deserializer=model__catalog__pb2.GrantAccessResponse.FromString,
                )


class ModelCatalogServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SignIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignUp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateFolder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListModels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadFile(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetModelVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GrantAccess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ModelCatalogServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SignIn': grpc.unary_unary_rpc_method_handler(
                    servicer.SignIn,
                    request_deserializer=model__catalog__pb2.SignInRequest.FromString,
                    response_serializer=model__catalog__pb2.SignInResponse.SerializeToString,
            ),
            'SignUp': grpc.unary_unary_rpc_method_handler(
                    servicer.SignUp,
                    request_deserializer=model__catalog__pb2.SignUpRequest.FromString,
                    response_serializer=model__catalog__pb2.SignUpResponse.SerializeToString,
            ),
            'CreateFolder': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFolder,
                    request_deserializer=model__catalog__pb2.CreateFolderRequest.FromString,
                    response_serializer=model__catalog__pb2.CreateFolderResponse.SerializeToString,
            ),
            'CreateModel': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateModel,
                    request_deserializer=model__catalog__pb2.CreateModelRequest.FromString,
                    response_serializer=model__catalog__pb2.CreateModelResponse.SerializeToString,
            ),
            'ListModels': grpc.unary_unary_rpc_method_handler(
                    servicer.ListModels,
                    request_deserializer=model__catalog__pb2.ListModelsRequest.FromString,
                    response_serializer=model__catalog__pb2.ListModelsResponse.SerializeToString,
            ),
            'UploadFile': grpc.stream_unary_rpc_method_handler(
                    servicer.UploadFile,
                    request_deserializer=model__catalog__pb2.UploadFileRequest.FromString,
                    response_serializer=model__catalog__pb2.UploadFileResponse.SerializeToString,
            ),
            'SetModelVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.SetModelVersion,
                    request_deserializer=model__catalog__pb2.SetModelVersionRequest.FromString,
                    response_serializer=model__catalog__pb2.SetModelVersionResponse.SerializeToString,
            ),
            'DownloadVersion': grpc.unary_stream_rpc_method_handler(
                    servicer.DownloadVersion,
                    request_deserializer=model__catalog__pb2.DownloadVersionRequest.FromString,
                    response_serializer=model__catalog__pb2.DownloadVersionResponse.SerializeToString,
            ),
            'GrantAccess': grpc.unary_unary_rpc_method_handler(
                    servicer.GrantAccess,
                    request_deserializer=model__catalog__pb2.GrantAccessRequest.FromString,
                    response_serializer=model__catalog__pb2.GrantAccessResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'model_catalog.ModelCatalog', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ModelCatalog(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SignIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/model_catalog.ModelCatalog/SignIn',
            model__catalog__pb2.SignInRequest.SerializeToString,
            model__catalog__pb2.SignInResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignUp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/model_catalog.ModelCatalog/SignUp',
            model__catalog__pb2.SignUpRequest.SerializeToString,
            model__catalog__pb2.SignUpResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateFolder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/model_catalog.ModelCatalog/CreateFolder',
            model__catalog__pb2.CreateFolderRequest.SerializeToString,
            model__catalog__pb2.CreateFolderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/model_catalog.ModelCatalog/CreateModel',
            model__catalog__pb2.CreateModelRequest.SerializeToString,
            model__catalog__pb2.CreateModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListModels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/model_catalog.ModelCatalog/ListModels',
            model__catalog__pb2.ListModelsRequest.SerializeToString,
            model__catalog__pb2.ListModelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadFile(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/model_catalog.ModelCatalog/UploadFile',
            model__catalog__pb2.UploadFileRequest.SerializeToString,
            model__catalog__pb2.UploadFileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetModelVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/model_catalog.ModelCatalog/SetModelVersion',
            model__catalog__pb2.SetModelVersionRequest.SerializeToString,
            model__catalog__pb2.SetModelVersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/model_catalog.ModelCatalog/DownloadVersion',
            model__catalog__pb2.DownloadVersionRequest.SerializeToString,
            model__catalog__pb2.DownloadVersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GrantAccess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/model_catalog.ModelCatalog/GrantAccess',
            model__catalog__pb2.GrantAccessRequest.SerializeToString,
            model__catalog__pb2.GrantAccessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
